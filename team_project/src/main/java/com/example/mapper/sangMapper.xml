<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.DAO.SangDAO">

	<select id="getItems" resultType="idto" parameterType="String">
		select *
			from(select rownum rr, a.*
    					from(select item_no, item_name, item_first_price, item_discount,item_thumbnail, reg_date, category_no, ITEM_DESCRIPTTION
									from item 
									order by
									<choose>
										<when test="orderOption == 1">reg_date desc</when>
										<when test="orderOption == 2">item_name</when>
										<when test="orderOption == 3">item_discount desc</when>
										<when test="orderOption == 4">item_discount</when>
										<when test="orderOption == 5">item_sales_rate desc</when>
										<otherwise>reg_date</otherwise>
									</choose>) a
									<if test="category_no != 0">
										where category_no=#{category_no}
										<if test="search != null">
											and ITEM_NAME like '%'||#{search}||'%' or ITEM_DESCRIPTTION like '%'||#{search}||'%'
										</if>
									</if>
									<if test="category_no == 0">
										<if test="search != null">
											where ITEM_NAME like '%'||#{search}||'%' or ITEM_DESCRIPTTION like '%'||#{search}||'%'
										</if>
									</if>
									) b where rr BETWEEN #{start} and #{end}
	</select>
	
	<select id="getItemCount" resultType="Integer" parameterType="Integer">
		select count(item_no) cnt from item
		<if test="category_no != 0">
			where category_no=#{category_no}
			<if test="search != null">
				and ITEM_NAME like '%'||#{search}||'%' or ITEM_DESCRIPTTION like '%'||#{search}||'%'
			</if>
		</if>
		<if test="category_no == 0">
			<if test="search != null">
				where ITEM_NAME like '%'||#{search}||'%' or ITEM_DESCRIPTTION like '%'||#{search}||'%'
			</if>
		</if>
	</select>
	
	<select id="getItem" resultType="idto" parameterType="String">
		select item_no, item_name, item_first_price, item_discount, item_thumbnail, item_descripttion, item_stock
				from item 
				where item_no = #{item_no}
	</select>
	
	<select id="getLikingItems" resultType="idto" parameterType="String">
		<![CDATA[
		select item.item_no, item_name, item_first_price, item_discount, item_thumbnail, reg_date 
					from item 
					join (select count(item_no) cnt, item_no 
								from order_item 
								JOIN (select order_no 
										from order_list 
										join (select DISTINCT mem_id 
													from order_item 
													join order_list 
													on order_item.order_no=order_list.order_no 
													where item_no=#{item_no}) a
										on a.mem_id=order_list.mem_id) b
								on b.order_no=order_item.order_no
								where item_no<>#{item_no}
						group by item_no
						order by cnt desc) c
					on c.item_no=item.item_no
		where rownum<=7
	    ]]>
	</select>
	
	<select id="getReviews" resultType="rdto" parameterType="String">
		<![CDATA[
		select *
				from (select rownum rr, a.*
							from (select review_no, review_title, review_content, mem_id, TO_CHAR(review_date,'YY/MM/DD') review_date
										from review 
										where item_no=#{item_no}
										order by review_no desc) a ) b
				where rr BETWEEN #{start} and #{end}
		]]>
	</select>
	
	<select id="getReviewCount" resultType="Integer">
		select count(*) cnt from Review 
	</select>
	
	<insert id="reviewWriteProc" parameterType="rdto">
	<selectKey resultType="Integer" keyProperty="review_no" order="BEFORE">
		select nvl(max(review_no),0) + 1 from review
	</selectKey>
	
		insert into review(review_no, review_title, review_content, review_star_rating, review_like,
							review_date, item_no, mem_id)
					values(#{review_no}, #{review_title}, #{review_content}, #{review_star_rating}, 0,
							sysdate, #{item_no}, #{mem_id})
	</insert>
	
	<select id="ReviewDescribe" resultType="rdto">
		select *
			from review
			where review_no=#{review_no}
	</select>
	
	<update id="revieUpdateProc" parameterType="rdto">
		update review set review_title=#{review_title}, review_content=#{review_content}, review_star_rating=#{review_star_rating}
				where review_no=#{review_no}
	</update>
	
	<select id="getItemInquirys" resultType="indto" parameterType="String">
		select *
			from (select rownum rr, a.*
						from (select INQ_TITLE, MEM_ID, INQ_CONTENT, INQ_REF, TO_CHAR(INQ_REG_DATE,'YY/MM/DD') INQ_REG_DATE, inq_no
									from ITEM_INQUIRY 
									where Item_no=#{item_no}
		    						order by INQ_no desc) a ) b
			where rr BETWEEN #{start} and #{end}
	</select>
	
	<select id="getItemInquiryCount" resultType="Integer">
		select count(*) cnt 
			from ITEM_INQUIRY 
	</select>
	
	<insert id="itemInquiryWriteProc" parameterType="indto">
	<selectKey resultType="Integer" keyProperty="inq_no" order="BEFORE">
		select nvl(max(inq_no),0) + 1 from item_inquiry
	</selectKey>
		insert into item_inquiry(inq_no, inq_title, inq_content, question_no,
							inq_reg_date, item_no, mem_id)
					values(#{inq_no}, #{inq_title}, #{inq_content}, #{question_no},
							sysdate, #{item_no}, #{mem_id})
	</insert>
	
	<select id="itemInquiryDescribe" resultType="indto" parameterType="indto">
		select *
				from item_inquiry
				where inq_no=#{inq_no}
	</select>
	
	<update id="itemInquiryUpdateProc" parameterType="indto">
		update item_Inquiry set inq_title=#{inq_title}, inq_content=#{inq_content}, question_no=#{question_no}
				where inq_no=#{inq_no}
	</update>

	<insert id="SignUpProc" parameterType="mdto">
		insert into member(mem_id, mem_password, mem_name, mem_address, mem_address_detail, mem_zipcode, 
							mem_mobile, mem_email, mem_email_reception, mem_reg_date, gender, birth_date)
				values(#{mem_id}, #{mem_password}, #{mem_name}, #{mem_address}, #{mem_address_detail}, #{mem_zipcode}, 
							#{mem_mobile}, #{mem_email}, #{mem_email_reception}, sysdate, #{gender}, #{birth_date}) 
	</insert>
	
	<select id="IDDuplicatecheck" resultType="Integer" parameterType="String">
		select count(*) cnt 
			from member
			where mem_id=#{mem_id} 
	</select>
	
	<select id="popularItem" resultType="idto">
	<![CDATA[
	select item_first_price, item_discount, a.item_no, item_name, item_thumbnail
			from (select *
						from (select count(item_no) cnt, item_no
									from order_item
									group by item_no
									order by cnt desc) 
						where rownum <= 8) a
				join item
				on a.item_no = item.item_no
	]]>
	</select>
	
	<select id="weekPopularItem" resultType="idto">
	<![CDATA[
		select item_first_price, item_discount, b.item_no, item_name, item_thumbnail
				from (select count(item_no) cnt, item_no 
		        			from (select ORDER_No, ORDER_DATE
		                   				 from order_list
		                   				 where ORDER_DATE > (select sysdate from dual)-7) a
		        			join order_item
		        			on a.ORDER_No=order_item.ORDER_No
		    				group by item_no
		   					order by cnt desc) b
		   		join item
		   		on b.item_no=item.item_no
		    	where rownum<=3
	]]>
	</select>
	
	<select id="MDItem" resultType="idto">
		select item_first_price, item_discount, item.item_no, item_name, item_thumbnail
				from md_item 
				join item
				on md_item.item_no=item.item_no
	</select>
	
	<select id="writeQualify" resultType="int" parameterType="String">
		select count(*)
				from order_item
				join (select order_no 
							from order_list 
							where mem_id=#{mem_id}) a
				on a.order_no=order_item.order_no
				where item_no=#{item_no}
	</select>
	
	<select id="getInterestedItem" resultType="boolean" parameterType="interestedDTO">
		select count(*)
				from INTERESTED_ITEM
				where item_no=#{item_no} and mem_id=#{mem_id}
	</select>
	
	<insert id="addInterestedItem" parameterType="interestedDTO">
		insert into INTERESTED_ITEM(item_no, mem_id)
					values(#{item_no}, #{mem_id})
	</insert>
	
</mapper>
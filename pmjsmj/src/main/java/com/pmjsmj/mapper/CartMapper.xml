<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pmjsmj.DAO.CartDAO">
	<insert id="addCart" parameterType="cdto">
		insert into cart
		(MEM_ID,ITEM_NO,CART_CNT) values(#{mem_id},#{item_no},#{cart_cnt})
	</insert>
	<select id="getCartListDTO" parameterType="mdto" resultType="cldto">
		select ITEM_NO,ITEM_NAME,ITEM_FIRST_PRICE,ITEM_DISCOUNT,ITEM_THUMBNAIL,CART_CNT
		from item natural join 
		(select MEM_ID,ITEM_NO,CART_CNT from cart where mem_id=#{mem_id})
	</select>
	<delete id="deleteCart" parameterType="HashMap">
		delete 
		from cart
		where item_no=#{cdto.item_no} and mem_id=#{mdto.mem_id}
	</delete>
	<select id="cartOrderList" parameterType="mdto" resultType="cldto">
		select ITEM_NO,ITEM_NAME,ITEM_FIRST_PRICE,ITEM_DISCOUNT,ITEM_THUMBNAIL,CART_CNT
		from item natural join (select MEM_ID, ITEM_NO, CART_CNT from cart
		where mem_id=#{mem_id})
	</select>
	<update id="setItemCount" parameterType="HashMap">
		update cart set cart_cnt=#{cart_cnt} where mem_id=#{mdto.mem_id} and item_no=#{item_no}
	</update>
	<select id="getOrderNo" resultType="Integer">
		select nvl(max(order_no),0)+1 order_no from order_list
	</select>
	<insert id="addOrderList" parameterType="olDTO">
		insert into ORDER_LIST(ORDER_NO,ORDER_DATE,ORDER_STATUS,ORDER_PAY_OPTION,ORDER_MONEY,
		            ORDER_TRACKING_NUM,ORDER_TO_NAME,ORDER_TO_PHONE,ORDER_ZIPCODE,
		            ORDER_TO_ADDRESS,ORDER_ADDRESS_DETAIL,ORDER_REQUEST,MEM_ID) 
		              values(#{order_no},sysdate,#{order_status},#{order_pay_option},#{order_money},
		                     #{order_tracking_num},#{order_to_name},#{order_to_phone},#{order_zipcode},
		                     #{order_to_address},#{order_address_detail},#{order_request},#{mem_id})
	</insert>
	<insert id="addPayBank" parameterType="pbDTO">
		insert into PAYMENT_BANK (ORDER_NO,PAY_BANK_DEPOSITOR,PAY_BANK_DATE)
		  values(#{order_no},#{pay_bank_depositor},sysdate)
	</insert>
	<insert id="addCard" parameterType="pcDTO">
		insert into PAYMENT_CARD (ORDER_NO,PAY_CREDIT_NUM,PAY_CREDIT_DATE,PAY_CREDIT_NAME)
		  values(#{order_no},#{pay_credit_num},sysdate,#{pay_credit_name})
	</insert>
	<insert id="addOrderItem" parameterType="cldto">
		insert into order_item (ORDER_NO, ITEM_NO, ORDERS_ITEM_MONEY, ORDERS_ITEM_CNT)
		values(#{order_no},#{item_no},#{orders_item_money},#{orders_item_cnt})
	</insert>
	<select id="getItemInfo" parameterType="Integer" resultType="idto">
		select ITEM_FIRST_PRICE, ITEM_DISCOUNT from item where item_no=#{item_no}
	</select>	
	<insert id="addOrderItemInfo" parameterType="oiDTO">
		insert into order_item(ORDER_NO, ITEM_NO, ORDERS_ITEM_MONEY, ORDERS_ITEM_CNT)
		values(#{order_no},#{item_no},#{orders_item_money},#{orders_item_cnt})
	</insert>
	<select id="refundList" parameterType="HashMap" resultType="rfDTO">
		select item_name, orders_item_cnt, item_first_price, item_discount, order_pay_option
        from item natural join
        (select item_no, orders_item_cnt, order_pay_option
		     from order_list natural join order_item where mem_id=#{mdto.mem_id} and order_no = #{order_no})
	</select>
	<insert id="addCancelInfo" parameterType="cancelDTO">
		insert into cancel (ORDER_NO, CANCEL_RECEIPT_DATE, ADMIN_APPROVAL_OR_NOT, CANCEL_REASON, DETAIL_REASON)
        values (#{order_no}, sysdate , #{admin_approval_or_not},#{cancel_reason}, #{detail_reason})
	</insert>
	<update id="setOrderStatus" parameterType="cancelDTO">
		update order_list set order_status = '취소신청' where order_no=#{order_no}
	</update>
	<select id="getRefundList" parameterType="mdto" resultType="rflistDTO">
		select a.order_no, TO_CHAR(max(a.cancel_complete_date) ,'YYYY-MM-DD') cancel_complete_date, 

                     TO_CHAR(max(a.cancel_receipt_date),'YYYY-MM-DD') cancel_receipt_date, 

                     max(a.admin_approval_or_not) admin_approval_or_not, 

                     max(d.item_name) item_name, count(d.item_name) orders_item_cnt,

                     (sum(c.orders_item_money*c.orders_item_cnt)+2500) refund_money

		               from cancel a ,  order_list b, order_item c, item d

		               where a.order_no = b.order_no	

		               and d.item_no = c.item_no

		

		               and b.order_no = c.order_no

		               and b.mem_id = #{mem_id}

		               GROUP by a.order_no, b.mem_id, c.order_no


		               order by a.order_no
	</select>
	<select id="cartCheck" parameterType="HashMap" resultType="String">
		    select mem_id from cart where mem_id=#{mdto.mem_id} and item_no=#{cdto.item_no}
	</select>
</mapper>
